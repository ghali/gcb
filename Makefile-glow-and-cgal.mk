#  The following code example is described in the book "Introduction
#  to Geometric Computing" by Sherif Ghali, Springer-Verlag, 2008.
#  
#  Copyright (C) 2008 Sherif Ghali. This code may be freely copied,
#  modified, or republished electronically or in print provided that
#  this copyright notice appears in all copies. This software is
#  provided "as is" without express or implied warranty; not even for
#  merchantability or fitness for a particular purpose.

opt: $(PROG)
dbg: $(PROG)

MYOSTYPE := $(shell uname)
#================================================================
CC = g++
#================================================================
ifeq ($(MYOSTYPE),Linux)
    CXXFLAGS = -Wall -W -LANG:std -I$(GLOW_LOC) \
               -DGLOW_PLATFORM_LINUX \
               -DGLOW_PLATFORM_LITTLEENDIAN \
               -c -MMD
    X11LIB=/usr/X11R6/lib
    LDFLAGS += -L$(GLOW_LOC) -Wl,-R$(GLOW_LOC) \
               -L$(X11LIB)  -Wl,-R$(X11LIB) \
               -lglut -lpthread -lGL -lGLU -lXi -lXmu -lX11 -ldl -lm -lstdc++
    GLOW_LOC=/usr/local/GLOW/glow_src/
else
    ifeq ($(MYOSTYPE),CYGWIN_NT-5.1)
        CXXFLAGS = -Wall -W -LANG:std -c -MMD
        LDFLAGS += -L$(GLOW_LOC) -Wl,-R$(GLOW_LOC) \
                   -lglut32 -lglu32 -lopengl32
        GLOW_LOC=/usr/local/GLOW/glow_src
    else
        ifeq ($(MYOSTYPE),Darwin)
            CXXFLAGS = -Wall -W -LANG:std -c -MMD -I$(GLOW_LOC)
	    LDFLAGS += -framework GLUT -framework OpenGL -framework Foundation \
                       -lstdc++ -lc -lgcc
            GLOW_LOC=/usr/local/GLOW/glow_src
        endif
    endif
endif
#================================================================
X11LIB=/usr/X11R6/lib

ifeq ($(MAKECMDGOALS),dbg)
	CXXFLAGS += -ggdb -DGLOW_OPTION_DEBUG
	LDFLAGS += -lglowdebug -L$(GLOW_LOC)
else				# optimized version generated by default
	CXXFLAGS += -DNODEBUG -DGLOW_OPTION_NODEBUG # -O2 (use on demand)
	LDFLAGS += -lglow -L$(GLOW_LOC)
endif

#================================================================
.cpp.o:
	$(CGAL_CXX) $(CGAL_CXXFLAGS) $(CXXFLAGS) $<

$(PROG): $(OBJS)
	$(RM) $@
	$(CGAL_CXX) -o $@ $(OBJS) $(LDFLAGS) $(CGAL_LDFLAGS)

.PHONY: opt clean dclean

clean:
	rm -f *.d *.o
dclean: clean
	rm -f $(PROG) $(PROG).exe

-include $(OBJS:.o=.d)
#================================================================
